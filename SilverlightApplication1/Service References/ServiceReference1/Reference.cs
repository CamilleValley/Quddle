//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PushPinModel", Namespace="http://tempuri.org/")]
    public partial class PushPinModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string TitleField;
        
        private string DescriptionField;
        
        private double LongitudeField;
        
        private double LatitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLocations", ReplyAction="*")]
        System.IAsyncResult BeginGetLocations(SilverlightApplication1.ServiceReference1.GetLocationsRequest request, System.AsyncCallback callback, object asyncState);
        
        SilverlightApplication1.ServiceReference1.GetLocationsResponse EndGetLocations(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLocationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLocations", Namespace="http://tempuri.org/", Order=0)]
        public SilverlightApplication1.ServiceReference1.GetLocationsRequestBody Body;
        
        public GetLocationsRequest() {
        }
        
        public GetLocationsRequest(SilverlightApplication1.ServiceReference1.GetLocationsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetLocationsRequestBody {
        
        public GetLocationsRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLocationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLocationsResponse", Namespace="http://tempuri.org/", Order=0)]
        public SilverlightApplication1.ServiceReference1.GetLocationsResponseBody Body;
        
        public GetLocationsResponse() {
        }
        
        public GetLocationsResponse(SilverlightApplication1.ServiceReference1.GetLocationsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetLocationsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.ServiceReference1.PushPinModel> GetLocationsResult;
        
        public GetLocationsResponseBody() {
        }
        
        public GetLocationsResponseBody(System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.ServiceReference1.PushPinModel> GetLocationsResult) {
            this.GetLocationsResult = GetLocationsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : SilverlightApplication1.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.ServiceReference1.PushPinModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.ServiceReference1.PushPinModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<SilverlightApplication1.ServiceReference1.WebService1Soap>, SilverlightApplication1.ServiceReference1.WebService1Soap {
        
        private BeginOperationDelegate onBeginGetLocationsDelegate;
        
        private EndOperationDelegate onEndGetLocationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetLocationsCompletedEventArgs> GetLocationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication1.ServiceReference1.WebService1Soap.BeginGetLocations(SilverlightApplication1.ServiceReference1.GetLocationsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocations(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetLocations(System.AsyncCallback callback, object asyncState) {
            SilverlightApplication1.ServiceReference1.GetLocationsRequest inValue = new SilverlightApplication1.ServiceReference1.GetLocationsRequest();
            inValue.Body = new SilverlightApplication1.ServiceReference1.GetLocationsRequestBody();
            return ((SilverlightApplication1.ServiceReference1.WebService1Soap)(this)).BeginGetLocations(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightApplication1.ServiceReference1.GetLocationsResponse SilverlightApplication1.ServiceReference1.WebService1Soap.EndGetLocations(System.IAsyncResult result) {
            return base.Channel.EndGetLocations(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.ServiceReference1.PushPinModel> EndGetLocations(System.IAsyncResult result) {
            SilverlightApplication1.ServiceReference1.GetLocationsResponse retVal = ((SilverlightApplication1.ServiceReference1.WebService1Soap)(this)).EndGetLocations(result);
            return retVal.Body.GetLocationsResult;
        }
        
        private System.IAsyncResult OnBeginGetLocations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLocations(callback, asyncState);
        }
        
        private object[] OnEndGetLocations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightApplication1.ServiceReference1.PushPinModel> retVal = this.EndGetLocations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocationsCompleted(object state) {
            if ((this.GetLocationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocationsCompleted(this, new GetLocationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocationsAsync() {
            this.GetLocationsAsync(null);
        }
        
        public void GetLocationsAsync(object userState) {
            if ((this.onBeginGetLocationsDelegate == null)) {
                this.onBeginGetLocationsDelegate = new BeginOperationDelegate(this.OnBeginGetLocations);
            }
            if ((this.onEndGetLocationsDelegate == null)) {
                this.onEndGetLocationsDelegate = new EndOperationDelegate(this.OnEndGetLocations);
            }
            if ((this.onGetLocationsCompletedDelegate == null)) {
                this.onGetLocationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocationsDelegate, null, this.onEndGetLocationsDelegate, this.onGetLocationsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication1.ServiceReference1.WebService1Soap CreateChannel() {
            return new WebService1SoapClientChannel(this);
        }
        
        private class WebService1SoapClientChannel : ChannelBase<SilverlightApplication1.ServiceReference1.WebService1Soap>, SilverlightApplication1.ServiceReference1.WebService1Soap {
            
            public WebService1SoapClientChannel(System.ServiceModel.ClientBase<SilverlightApplication1.ServiceReference1.WebService1Soap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLocations(SilverlightApplication1.ServiceReference1.GetLocationsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetLocations", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightApplication1.ServiceReference1.GetLocationsResponse EndGetLocations(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightApplication1.ServiceReference1.GetLocationsResponse _result = ((SilverlightApplication1.ServiceReference1.GetLocationsResponse)(base.EndInvoke("GetLocations", _args, result)));
                return _result;
            }
        }
    }
}
