#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreeQ_WS.Classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FreeQ_DB")]
	public partial class FreeQ_DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQueue(Queue instance);
    partial void UpdateQueue(Queue instance);
    partial void DeleteQueue(Queue instance);
    #endregion
		
		public FreeQ_DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FreeQ_DBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FreeQ_DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FreeQ_DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FreeQ_DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FreeQ_DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Queue> Queues
		{
			get
			{
				return this.GetTable<Queue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Queue")]
	public partial class Queue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Queue_ID;
		
		private string _Queue_Name;
		
		private bool _Queue_IsActive;
		
		private System.DateTime _Queue_CreationDate;
		
		private System.Guid _Queue_UserID;
		
		private System.Nullable<System.Guid> _Queue_Current_Ticket_ID;
		
		private long _Queue_Next_Increment;
		
		private string _Queue_Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQueue_IDChanging(System.Guid value);
    partial void OnQueue_IDChanged();
    partial void OnQueue_NameChanging(string value);
    partial void OnQueue_NameChanged();
    partial void OnQueue_IsActiveChanging(bool value);
    partial void OnQueue_IsActiveChanged();
    partial void OnQueue_CreationDateChanging(System.DateTime value);
    partial void OnQueue_CreationDateChanged();
    partial void OnQueue_UserIDChanging(System.Guid value);
    partial void OnQueue_UserIDChanged();
    partial void OnQueue_Current_Ticket_IDChanging(System.Nullable<System.Guid> value);
    partial void OnQueue_Current_Ticket_IDChanged();
    partial void OnQueue_Next_IncrementChanging(long value);
    partial void OnQueue_Next_IncrementChanged();
    partial void OnQueue_AddressChanging(string value);
    partial void OnQueue_AddressChanged();
    #endregion
		
		public Queue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Queue_ID
		{
			get
			{
				return this._Queue_ID;
			}
			set
			{
				if ((this._Queue_ID != value))
				{
					this.OnQueue_IDChanging(value);
					this.SendPropertyChanging();
					this._Queue_ID = value;
					this.SendPropertyChanged("Queue_ID");
					this.OnQueue_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Queue_Name
		{
			get
			{
				return this._Queue_Name;
			}
			set
			{
				if ((this._Queue_Name != value))
				{
					this.OnQueue_NameChanging(value);
					this.SendPropertyChanging();
					this._Queue_Name = value;
					this.SendPropertyChanged("Queue_Name");
					this.OnQueue_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_IsActive", DbType="Bit NOT NULL")]
		public bool Queue_IsActive
		{
			get
			{
				return this._Queue_IsActive;
			}
			set
			{
				if ((this._Queue_IsActive != value))
				{
					this.OnQueue_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Queue_IsActive = value;
					this.SendPropertyChanged("Queue_IsActive");
					this.OnQueue_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_CreationDate", DbType="Date NOT NULL")]
		public System.DateTime Queue_CreationDate
		{
			get
			{
				return this._Queue_CreationDate;
			}
			set
			{
				if ((this._Queue_CreationDate != value))
				{
					this.OnQueue_CreationDateChanging(value);
					this.SendPropertyChanging();
					this._Queue_CreationDate = value;
					this.SendPropertyChanged("Queue_CreationDate");
					this.OnQueue_CreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Queue_UserID
		{
			get
			{
				return this._Queue_UserID;
			}
			set
			{
				if ((this._Queue_UserID != value))
				{
					this.OnQueue_UserIDChanging(value);
					this.SendPropertyChanging();
					this._Queue_UserID = value;
					this.SendPropertyChanged("Queue_UserID");
					this.OnQueue_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_Current_Ticket_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Queue_Current_Ticket_ID
		{
			get
			{
				return this._Queue_Current_Ticket_ID;
			}
			set
			{
				if ((this._Queue_Current_Ticket_ID != value))
				{
					this.OnQueue_Current_Ticket_IDChanging(value);
					this.SendPropertyChanging();
					this._Queue_Current_Ticket_ID = value;
					this.SendPropertyChanged("Queue_Current_Ticket_ID");
					this.OnQueue_Current_Ticket_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_Next_Increment", DbType="BigInt NOT NULL")]
		public long Queue_Next_Increment
		{
			get
			{
				return this._Queue_Next_Increment;
			}
			set
			{
				if ((this._Queue_Next_Increment != value))
				{
					this.OnQueue_Next_IncrementChanging(value);
					this.SendPropertyChanging();
					this._Queue_Next_Increment = value;
					this.SendPropertyChanged("Queue_Next_Increment");
					this.OnQueue_Next_IncrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue_Address", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Queue_Address
		{
			get
			{
				return this._Queue_Address;
			}
			set
			{
				if ((this._Queue_Address != value))
				{
					this.OnQueue_AddressChanging(value);
					this.SendPropertyChanging();
					this._Queue_Address = value;
					this.SendPropertyChanged("Queue_Address");
					this.OnQueue_AddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
